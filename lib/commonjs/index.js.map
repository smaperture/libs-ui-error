{"version":3,"sources":["index.tsx"],"names":["DisplayError","children","icon","style","theme","title","colors","styles","createStyles","container","error","faCircleExclamation","text","StyleSheet","create","alignItems","flex","margin","EM","marginBottom","color"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AAEA;;AAEA;;;;AAEA,MAAMA,YAMJ,GAAG,QAA6C;AAAA,MAA5C;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,IAAZ;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,KAAzB;AAAgCC,IAAAA;AAAhC,GAA4C;AAChD,QAAM;AAAEC,IAAAA;AAAF,MAAaF,KAAnB;AACA,QAAMG,MAAM,GAAGC,YAAY,CAACJ,KAAD,CAA3B;AAEA,sBACE,6BAAC,uBAAD;AAAY,IAAA,qBAAqB,EAC/B,CAACG,MAAM,CAACE,SAAR,EACEN,KADF;AADF,kBAIE,6BAAC,eAAD;AACE,IAAA,KAAK,EAAEG,MAAM,CAACI,KADhB;AAEE,IAAA,IAAI,EAAER,IAAI,IAAIS,qCAFhB;AAGE,IAAA,IAAI,EAAE,EAHR;AAIE,IAAA,KAAK,EAAEJ,MAAM,CAACL;AAJhB,IAJF,EAUGG,KAAK,iBAAI,6BAAC,uBAAD;AAAO,IAAA,KAAK,EAAE,CACtBE,MAAM,CAACK,IADe,EAEtBL,MAAM,CAACF,KAFe;AAAd,KAGNA,KAHM,CAVZ,eAcE,6BAAC,4BAAD;AAAY,IAAA,KAAK,EAAEE,MAAM,CAACK;AAA1B,KACGX,QADH,CAdF,CADF;AAoBD,CA9BD;;AAgCA,MAAMO,YAAY,GAAIJ,KAAD,IAAkBS,wBAAWC,MAAX,CAAkB;AACvDL,EAAAA,SAAS,EAAE;AACTM,IAAAA,UAAU,EAAE,QADH;AAETC,IAAAA,IAAI,EAAE,CAFG;AAGT;AACAC,IAAAA,MAAM,EAAEC,aAAK;AAJJ,GAD4C;AAOvDhB,EAAAA,IAAI,EAAE;AACJiB,IAAAA,YAAY,EAAED;AADV,GAPiD;AAUvDN,EAAAA,IAAI,EAAE;AACJQ,IAAAA,KAAK,EAAEhB,KAAK,CAACE,MAAN,CAAaI;AADhB,GAViD;AAavDL,EAAAA,KAAK,EAAE;AACLc,IAAAA,YAAY,EAAED;AADT;AAbgD,CAAlB,CAAvC;;eAkBe,iCAAUlB,YAAV,C","sourcesContent":["import FontAwesomeIcon from '@smaperture/fa-icon';\nimport React, { ReactNode } from 'react';\nimport { EM } from '@smaperture/layout';\nimport { Subheading, Title, withTheme } from 'react-native-paper';\nimport { IconDefinition } from '@fortawesome/fontawesome-common-types';\nimport { ScrollView, StyleProp, StyleSheet, ViewStyle } from 'react-native';\nimport { Theme } from 'react-native-paper/lib/typescript/types';\nimport { faCircleExclamation } from '@fortawesome/pro-light-svg-icons';\n\nconst DisplayError: React.FC<{\n  children?: ReactNode;\n  icon?: IconDefinition;\n  style?: StyleProp<ViewStyle>;\n  theme: Theme;\n  title?: string;\n}> = ({ children, icon, style, theme, title }) => {\n  const { colors } = theme;\n  const styles = createStyles(theme);\n\n  return (\n    <ScrollView contentContainerStyle={\n      [styles.container,\n        style,\n      ]}>\n      <FontAwesomeIcon\n        color={colors.error}\n        icon={icon || faCircleExclamation}\n        size={72}\n        style={styles.icon}\n      />\n      {title && <Title style={[\n        styles.text,\n        styles.title,\n      ]}>{title}</Title>}\n      <Subheading style={styles.text}>\n        {children}\n      </Subheading>\n    </ScrollView>\n  );\n};\n\nconst createStyles = (theme: Theme) => StyleSheet.create({\n  container: {\n    alignItems: 'center',\n    flex: 1,\n    // justifyContent: 'center',\n    margin: EM * 2,\n  },\n  icon: {\n    marginBottom: EM,\n  },\n  text: {\n    color: theme.colors.error,\n  },\n  title: {\n    marginBottom: EM,\n  },\n});\n\nexport default withTheme(DisplayError);\n"]}